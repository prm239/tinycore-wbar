diff --git a/Bar.cc b/Bar.cc
index 2d8a2a1..8a52074 100644
--- a/Bar.cc
+++ b/Bar.cc
@@ -63,7 +63,7 @@ void Bar::scale() {
 #endif
 
     // bar dimensions
-    width = icon_unit * (icons.size() + 1) - 2 * icon_dist;
+    ow = width = icon_unit * (icons.size() + 1) - 2 * icon_dist;
     height=(int)(icon_size * 1.25);
 
     // Space needed for growing
@@ -81,14 +81,16 @@ void Bar::scale() {
         (int)((dn_growth>0.0? dn_growth : 0.0));
 
     // Initial Bar position
-    y = MARGEN + (int)(up_growth>0.0? up_growth : 0.0);
-    x = (int)icon_offset;
+    oy = y = MARGEN + (int)(up_growth>0.0? up_growth : 0.0);
+    ox = x = (int)icon_offset;
 
     // Re organize widget position
     for(size_t a=0; a < icons.size(); a++) {
-        icons[a]->x = icons[a]->ox = (int)(icon_offset + icon_size/2 + a * icon_unit);
-        icons[a]->y = icons[a]->oy = y + (int)(0.125 * icon_size);
-        icons[a]->size = icon_size;
+        icons[a]->x = icons[a]->bx = icons[a]->ox = 
+            (int)(icon_offset + icon_size/2 + a * icon_unit);
+        icons[a]->y = icons[a]->by = icons[a]->oy = 
+            y + (int)(0.125 * icon_size);
+        icons[a]->size = icons[a]->bs = icon_size;
     }
 
     // Adapt container window to changes
@@ -254,6 +256,9 @@ void Bar::animate() {
         cur_ic->cy = cur_ic->by;
         cur_ic->cs = cur_ic->bs;
     }
+    vx = (x - bx) / (float)anim_time;
+    vy = (y - by) / (float)anim_time;
+    vw = (width - bw) / (float)anim_time;
 
     gettimeofday(&tv0, NULL);
 
@@ -276,6 +281,10 @@ void Bar::animate() {
             cur_ic->size = cur_ic->cs + (int)(t * cur_ic->vs);
         }
 
+        x = bx + (int)(t * vx);
+        y = by + (int)(t * vy);
+        width = bw + (int)(t * vw);
+
         render();
     }
 }
@@ -283,8 +292,11 @@ void Bar::animate() {
 void Bar::set_focus(int focus) {
     if( focus ) {
         focused = 1;
+        bx = x; by = y; bw = width;
         x=0;
+        y = oy;
         width = window->w;
+        window->raise();
     } else {
         focused = 0;
         x = (int)icon_offset;
@@ -293,9 +305,11 @@ void Bar::set_focus(int focus) {
 
         for(size_t a=0; a<icons.size(); a++) {
             icons[a]->x = icons[a]->ox;
-            icons[a]->y = icons[a]->oy;
+            icons[a]->y = icons[a]->oy + icon_size * hide_factor;
             icons[a]->size = icon_size;
         }
+        y += icon_size * hide_factor;
+        window->lower();
     }
 #if 0
     cleanbuf = window->background.full();
diff --git a/Bar.h b/Bar.h
index 9c563d6..8436777 100644
--- a/Bar.h
+++ b/Bar.h
@@ -48,6 +48,7 @@ class Bar{
         int icon_anim;
         float jump_factor;
         float zoom_factor;
+        float hide_factor;
 
         // fast math constants
         float b_scl_d;
@@ -62,12 +63,15 @@ class Bar{
 
         // current status
         int x, y, width, height;
+        int bx, by, bw, ox, oy, ow;
+        float vx, vy, vw;
         int zoomed_icon;
         int focused;
 
         void transform(int mousex);
         void render();
         void animate();
+    public:
         void scale();
 };
 
diff --git a/Main.cc b/Main.cc
index 100ff19..4b3afd3 100644
--- a/Main.cc
+++ b/Main.cc
@@ -56,6 +56,7 @@ int main(int argc, char *argv[]) try  {
 
     wwin->map();
     wbar->set_focus(0);
+    wbar->scale();
 
     while( !sigexit ) {
 
diff --git a/OptParser.cc b/OptParser.cc
index 12cb09b..5ee861b 100644
--- a/OptParser.cc
+++ b/OptParser.cc
@@ -42,7 +42,8 @@ static struct _op_options {
     {"fc"           , 1, "0xff00c800"   , "filter color 0xAARRGGBB"},
     {"nanim"        , 1, "7"            , "number of animated icons"},
     {"nofont"       , 0, ""             , "disable font rendering"},
-    {"startdelay"   , 1, "15"           , "startup delay"}
+    {"startdelay"   , 1, "15"           , "startup delay"},
+    {"hide"         , 1, "down"         , "hide upwards or downwards (up | down)"}
 };
 
 void OptParser::configure(Bar *wbar) {
@@ -78,6 +79,13 @@ void OptParser::configure(Bar *wbar) {
 
     wbar->scale();
 
+    if( !isSet("hide") )
+        wbar->hide_factor = 0;
+    else if( !strcmp(getArgument("hide"), "up") )
+        wbar->hide_factor = -1;
+    else if( !strcmp(getArgument("hide"), "down") )
+        wbar->hide_factor = 1;
+
     if( isSet("startdelay") )
         sleep( atoi(getArgument("startdelay")) );
 }
diff --git a/XWin.cc b/XWin.cc
index 24c9ffe..35d2c1b 100644
--- a/XWin.cc
+++ b/XWin.cc
@@ -144,9 +144,9 @@ void XWin::set_toolbar_properties(int wlayer) {
     Atom a, prop;
     long lprop[5] = { 0, 0, 0, 0, 0 };
 
-    // set dock type (_NET_WM_WINDOW_TYPE_DESKTOP / NORMAL)
+    // set dock type (_NET_WM_WINDOW_TYPE_DESKTOP / NORMAL / DOCK)
     a = XInternAtom(display, "_NET_WM_WINDOW_TYPE", True);
-    prop = XInternAtom(display, "_NET_WM_WINDOW_TYPE_DOCK", True);
+    prop = XInternAtom(display, "_NET_WM_WINDOW_TYPE_NORMAL", True);
     XChangeProperty(display, window, a, XA_ATOM, 32, PropModeReplace, (unsigned char *) &prop, 1);
 
     // no decorations
@@ -172,6 +172,7 @@ void XWin::set_toolbar_properties(int wlayer) {
 	XChangeProperty(display, window, a, XA_ATOM, 32, PropModeAppend, (unsigned char *) &prop, 1);
 
     // set win layer
+    /*
     if( wlayer == LAYER_BELOW ) {
         prop = XInternAtom(display, "_NET_WM_STATE_BELOW", True);
         XChangeProperty(display, window, a, XA_ATOM, 32, PropModeAppend, (unsigned char *) &prop, 1);
@@ -181,9 +182,10 @@ void XWin::set_toolbar_properties(int wlayer) {
     }
     a = XInternAtom(display, "_WIN_LAYER", True);
 	XChangeProperty(display, window, a, XA_CARDINAL, 32, PropModeAppend, (unsigned char *) &wlayer, 1);
+    */
 
     // set opacity
-	//prop = XInternAtom(display, "_NET_WM_WINDOW_OPACITY", True);
-    //wopacity = (int)(0xFFFFFFFF * opacity);
+	//a = XInternAtom(display, "_NET_WM_WINDOW_OPACITY", True);
+    //int wopacity = (int)(0xFFFFFFFF * 1.0);
 	//XChangeProperty(display, window, a, XA_CARDINAL, 32, PropModeAppend, (unsigned char *) &wopacity, 1);
 }
